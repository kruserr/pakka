[target.x86_64-unknown-linux-gnu]
linker = "clang"
rustflags = [
  "-C", "target-feature=+crt-static",
  # "-C", "target-cpu=native",
  "-C", "link-arg=-pie",                 # Enable Position Independent Executable
  "-C", "link-arg=-Wl,-z,relro,-z,now",  # Enable RELRO and NOW
  "-C", "link-arg=-Wl,-z,noexecstack",   # Disable executable stack
  "-C", "link-arg=-Wl,-z,nodlopen",      # Disable dynamic loading
  "-C", "link-arg=-Wl,-z,defs",          # Ensure all symbols are defined
  "-C", "link-arg=-fstack-protector-strong", # Enable stack protection
  "-C", "link-arg=-fcf-protection=full", # Enable Control Flow Protection

  "-C", "link-arg=-D_FORTIFY_SOURCE=2",
  "-C", "link-arg=-fvisibility=hidden",

  "-C", "link-arg=-flto",       
  "-C", "link-arg=-fsanitize=cfi",        # Enable Control Flow Integrity
  # "-C", "link-arg=-fsanitize=safe-stack", # Use SafeStack for function stacks
  "-C", "link-arg=-mllvm", "-C", "link-arg=-fla",  # Enable Flattening Obfuscation
  "-C", "link-arg=-mllvm", "-C", "link-arg=-bcf",  # Enable Bogus Control Flow
  "-C", "link-arg=-mllvm", "-C", "link-arg=-sub",  # Enable Instruction Substitution
]

[target.x86_64-apple-darwin]
linker = "clang"
rustflags = [
  "-C", "target-feature=+crt-static",
  # "-C", "target-cpu=native",
  "-C", "link-arg=-pie",                 # Enable Position Independent Executable
  "-C", "link-arg=-Wl,-z,relro,-z,now",  # Enable RELRO and NOW
  "-C", "link-arg=-Wl,-z,noexecstack",   # Disable executable stack
  "-C", "link-arg=-Wl,-z,nodlopen",      # Disable dynamic loading
  "-C", "link-arg=-Wl,-z,defs",          # Ensure all symbols are defined
  "-C", "link-arg=-fstack-protector-strong", # Enable stack protection
  "-C", "link-arg=-fcf-protection=full", # Enable Control Flow Protection

  "-C", "link-arg=-D_FORTIFY_SOURCE=2",
  "-C", "link-arg=-fvisibility=hidden",

  "-C", "link-arg=-flto",       
  "-C", "link-arg=-fsanitize=cfi",        # Enable Control Flow Integrity
  # "-C", "link-arg=-fsanitize=safe-stack", # Use SafeStack for function stacks
  "-C", "link-arg=-mllvm", "-C", "link-arg=-fla",  # Enable Flattening Obfuscation
  "-C", "link-arg=-mllvm", "-C", "link-arg=-bcf",  # Enable Bogus Control Flow
  "-C", "link-arg=-mllvm", "-C", "link-arg=-sub",  # Enable Instruction Substitution
]

[target.x86_64-pc-windows-gnu]
linker = "clang"
rustflags = [
  "-C", "target-feature=+crt-static",
  # "-C", "target-cpu=native",
  "-C", "link-arg=-pie",                 # Enable Position Independent Executable
  "-C", "link-arg=-Wl,-z,relro,-z,now",  # Enable RELRO and NOW
  "-C", "link-arg=-Wl,-z,noexecstack",   # Disable executable stack
  "-C", "link-arg=-Wl,-z,nodlopen",      # Disable dynamic loading
  "-C", "link-arg=-Wl,-z,defs",          # Ensure all symbols are defined
  "-C", "link-arg=-fstack-protector-strong", # Enable stack protection
  "-C", "link-arg=-fcf-protection=full", # Enable Control Flow Protection

  "-C", "link-arg=-D_FORTIFY_SOURCE=2",
  "-C", "link-arg=-fvisibility=hidden",

  "-C", "link-arg=-flto",       
  "-C", "link-arg=-fsanitize=cfi",        # Enable Control Flow Integrity
  # "-C", "link-arg=-fsanitize=safe-stack", # Use SafeStack for function stacks
  "-C", "link-arg=-mllvm", "-C", "link-arg=-fla",  # Enable Flattening Obfuscation
  "-C", "link-arg=-mllvm", "-C", "link-arg=-bcf",  # Enable Bogus Control Flow
  "-C", "link-arg=-mllvm", "-C", "link-arg=-sub",  # Enable Instruction Substitution
]

[profile.dev]
opt-level = 0
debug = true
debug-assertions = true
overflow-checks = true
lto = false
panic = 'abort'
incremental = true
codegen-units = 256
rpath = false

[profile.release]
opt-level = 3
debug = false
debug-assertions = false
# overflow-checks = false
overflow-checks = true
lto = true
panic = 'abort'
incremental = false
codegen-units = 1
rpath = false
strip = true

[profile.test]
opt-level = 0
debug = true
debug-assertions = true
overflow-checks = true
lto = false
incremental = true
codegen-units = 256
rpath = false

[profile.bench]
opt-level = 3
debug = false
debug-assertions = false
overflow-checks = false
lto = true
incremental = false
codegen-units = 1
rpath = false
strip = true

[profile.dev.package."*"]
opt-level = 0
debug = true
debug-assertions = true
overflow-checks = true
incremental = true
codegen-units = 256

[profile.dev.build-override]
opt-level = 0
debug = true
debug-assertions = true
overflow-checks = true
incremental = true
codegen-units = 256
